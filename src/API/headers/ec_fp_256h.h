#ifndef ECFP256H_H
#define ECFP256H_H

#define EC_FP_SMULBASE_WINDOW 8
#define EC_FP_SMULBASE_CACHE_SIZE ((1 << EC_FP_SMULBASE_WINDOW)*(256/((sizeof(unsigned char)*8))))
#define EC_FP_SMULBASE_SLICE 0


#define EC_FP_SMULBASE_256H_CACHE static const unsigned char cn0[256/(sizeof(unsigned char))] = { \
	0x2E, 0x00, 0xBF, 0x61, 0x5F, 0x44, 0xC4, 0x59, 0x2B, 0x0A, 0x05, 0x91, 0x36, 0xA3, 0xF5, 0xE5, 0x58, 0xAE, 0x1B, 0xB5, 0xAF, 0x9C, 0x87, 0xF7, 0x2F, 0xBD, 0xB3, 0x33, 0xB4, 0x4A, 0x49, 0x06 \
}, dn0[256/(sizeof(unsigned char))] = { \
	0xB9, 0x09, 0x12, 0x2E, 0xF2, 0x4F, 0x6C, 0xCB, 0x53, 0xD0, 0xC1, 0x15, 0xAD, 0x7E, 0x4D, 0xCE, 0x51, 0xF6, 0xA4, 0x2C, 0x6E, 0x34, 0xFF, 0xFD, 0x5C, 0x08, 0x5A, 0x1C, 0x93, 0x19, 0x3B, 0x05 \
}, xn0[256/(sizeof(unsigned char))] = { \
	0x91, 0x34, 0x41, 0x7D, 0x28, 0xC4, 0xE4, 0xEE, 0x5C, 0xF4, 0x82, 0xC9, 0xA9, 0x64, 0xED, 0x97, 0xEB, 0xC4, 0xAC, 0x29, 0xAD, 0x04, 0x64, 0x5D, 0x19, 0xA6, 0x99, 0xEE, 0x13, 0x5B, 0xF3, 0xAC \
}, yn0[256/(sizeof(unsigned char))] = { \
	0xC0, 0x65, 0xE3, 0x83, 0x6B, 0xE4, 0xB1, 0xF2, 0x2A, 0x46, 0xF9, 0xBF, 0x02, 0xC3, 0x59, 0x68, 0xFE, 0x15, 0xD7, 0x2B, 0x8F, 0xD8, 0x22, 0x04, 0x8D, 0xD3, 0xAC, 0xD1, 0x07, 0x2F, 0x2A, 0xFB \
};



#endif
